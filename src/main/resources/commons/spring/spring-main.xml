<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.0.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">
    <!-- 开启注解扫描 -->
    <context:annotation-config/>

    <!-- 配置文件 -->
    <context:property-placeholder location="classpath*:db.properties"/>


    <!-- 注解扫面包路径 -->
    <context:component-scan base-package="com.jf"/>


    <!-- 数据源配置, 使用 Druid 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${db.driver}"/>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.pass}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db.init}"/>
        <property name="minIdle" value="${db.min}"/>
        <property name="maxActive" value="${db.max}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置maxWait后 会使用公平锁，并发性能降下，可配置useUnfairLock=true，是否非公平锁 -->
        <!-- 		<property name="useUnfairLock" value="true"/> -->
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>

        <!-- 监控统计拦截的filters -->
        <!--         <property name="proxyFilters">   -->
        <!--             <list>   -->
        <!--                 <ref bean="stat-filter" /> -->
        <!--             </list> -->
        <!--         </property> -->

    </bean>


    <!-- 慢SQL记录-->
    <!--     <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">   -->
    <!--         <property name="mergeSql" value="false" />   -->
    <!--         <property name="slowSqlMillis" value="5000" /> -->
    <!--         <property name="logSlowSql" value="true" /> -->
    <!--     </bean> -->


    <!-- 配置Jdbc模板 -->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- 配置事务管理器 -->

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>


    <!--<aop:config>-->
        <!--<aop:pointcut id="appService" expression="execution(* com.jf.quzrtz.service.*ServiceImpl*.*(..))"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="appService"/>-->
    <!--</aop:config>-->

    <tx:advice id="txAdvice" >
        <tx:attributes>

            <tx:method name="select*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>


    <!--<bean id="transactionInterceptor"-->
          <!--class="org.springframework.transaction.interceptor.TransactionInterceptor">-->

        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--&lt;!&ndash; ,-Exception &ndash;&gt;-->
        <!--<property name="transactionAttributes">-->
            <!--<props>-->
                <!--&lt;!&ndash; 事务 &ndash;&gt;-->
                <!--<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="set*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="edit*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--<prop key="excute*">PROPAGATION_REQUIRED,-Exception</prop>-->
                <!--&lt;!&ndash; 不使用事务 &ndash;&gt;-->
                <!--<prop key="*">PROPAGATION_SUPPORTS</prop>-->
                <!--&lt;!&ndash; 				<prop key="get*">PROPAGATION_SUPPORTS</prop> &ndash;&gt;-->
                <!--&lt;!&ndash; 				<prop key="find*">PROPAGATION_SUPPORTS</prop> &ndash;&gt;-->
                <!--&lt;!&ndash; 				<prop key="select*">PROPAGATION_SUPPORTS</prop> &ndash;&gt;-->
                <!--&lt;!&ndash; 				<prop key="check*">PROPAGATION_SUPPORTS</prop> &ndash;&gt;-->
                <!--&lt;!&ndash; 				<prop key="is*">PROPAGATION_SUPPORTS</prop> &ndash;&gt;-->

                <!--&lt;!&ndash; 其他使用只读事务 &ndash;&gt;-->
                <!--&lt;!&ndash; 				<prop key="*">PROPAGATION_SUPPORTS,readOnly</prop> &ndash;&gt;-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->


    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--<property name="beanNames">-->
            <!--<list>-->
                <!--<value>*Service</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<value>transactionInterceptor</value>-->
        <!--</property>-->
    <!--</bean>-->


    <!-- 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   -->
    <!--             <property name="defaultEncoding" value="UTF-8"/>   -->
    <!--             指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和   -->
    <!--             <property name="maxUploadSize" value="200000"/>   -->
    <!--     </bean> -->


    <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>
</beans>